// Project mixins; add your own at the bottom

//////// FONT SIZING IN REM WITH FALLBACKS

// Enter a rem font size value and auto calculate pixel fallback for older browsers as well as easily read line heights.
// Best used for body type; line heights are a bit hefty for headings.

.font-size(@sizeValue) {
  @remValue: @sizeValue;
  @pxValue: (@sizeValue * 10);
  @lineHeightPx: (@pxValue + 7);
  @lineHeightRem: (@remValue + 0.7);
  font-size: ~"@{pxValue}px";
  font-size: ~"@{remValue}rem";
  line-height: ~"@{lineHeightPx}px";
  line-height: ~"@{lineHeightRem}rem";
}

// Enter individual font size and line height values with pixel fallback

.font-size-man(@fontSize, @lineHeight) {

  // Font size
  @pxFontSize: (@fontSize * 10);
  font-size: ~"@{pxFontSize}px";
  font-size: ~"@{fontSize}rem";

  // Line height
  @pxLineHeight: (@lineHeight * 10);
  line-height: ~"@{pxLineHeight}px";
  line-height: ~"@{lineHeight}rem";
}

.line-height(@sizeValue) {
  @remValue: @sizeValue;
  @pxValue: (@sizeValue * 10);
  @lineHeightPx: (@pxValue + 7);
  @lineHeightRem: (@remValue + 0.7);
  line-height: ~"@{lineHeightPx}px";
  line-height: ~"@{lineHeightRem}rem";
}

// List style reset

.list-reset() {
  list-style-type: none;
  margin: 0;
  padding: 0;

  li {
    list-style-type: none;
    margin: 0;
    padding: 0;
    display: inline-block;
  }
}

// Link style

.link(@colour) {
  color: @colour;

  &:hover {
    color: darken(@colour, 10%);
  }

  &:active {
    color: darken(@colour, 20%);
  }
}

// Glyphicons

// Find the one you want here: http://glyphicons.com/
// Find the CSS code for the variable here: https://github.com/twbs/bootstrap/blob/master/less/glyphicons.less

@icon-play: \e072;
@icon-right: \e080;
@icon-left: \e079;
@icon-calendar: \e109;
@icon-user: \e008;
@icon-menu: \e056;

.glyph(@glyph, @position) when (@position = before) {

  &:before {
    &:extend(.glyphicon);

    top: -1px;
    content: "@{glyph}";
    color: @lightergrey;
    .font-size(1);
    padding-right: 7px;
  }
}

.glyph(@glyph, @position) when (@position = after) {

  &:after {
    &:extend(.glyphicon);

    top: -1px;
    content: "@{glyph}";
    color: @lightergrey;
    .font-size(1);
    padding-left: 7px;
  }
}

// Rounded corners

.background-clip(@argument: padding-box) {
  -moz-background-clip: @argument;
  -webkit-background-clip: @argument;
  background-clip: @argument;
}

.border-radius(@topright: 0, @bottomright: 0, @bottomleft: 0, @topleft: 0) {
  -webkit-border-top-right-radius: @topright;
  -webkit-border-bottom-right-radius: @bottomright;
  -webkit-border-bottom-left-radius: @bottomleft;
  -webkit-border-top-left-radius: @topleft;
  -moz-border-radius-topright: @topright;
  -moz-border-radius-bottomright: @bottomright;
  -moz-border-radius-bottomleft: @bottomleft;
  -moz-border-radius-topleft: @topleft;
  border-top-right-radius: @topright;
  border-bottom-right-radius: @bottomright;
  border-bottom-left-radius: @bottomleft;
  border-top-left-radius: @topleft;
  .background-clip(padding-box);
}

// Hide text

.hide-text() {
  overflow:hidden;
  text-indent:-9000px;
  display:block;
}